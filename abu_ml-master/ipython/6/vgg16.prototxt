name: "VGG16"
# 省略数据层
layers {
  bottom: "data" # 64 3x3卷积
  top: "conv1_1"
  name: "conv1_1"
  type: CONVOLUTION
  convolution_param {
    num_output: 64 # 64个卷积核
    pad: 1 # 边距1
    kernel_size: 3 # 3x3卷积核
  }
}
layers {
  bottom: "conv1_1" 
  top: "conv1_1"
  name: "relu1_1" # relu
  type: RELU
}
layers {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2" # 64 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2" # relu
  type: RELU
}
layers {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1" # 2x2 最大池化
  type: POOLING
  pooling_param {
    pool: MAX # 最大池化
    kernel_size: 2 # 2x2池化
    stride: 2 # 步长2
  }
}
layers {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1" # 128 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1" # relu
  type: RELU
}
layers {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2" # 128 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2" # relu
  type: RELU
}
layers {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2" # 2x2 最大池化
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1" # 256 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1" # relu
  type: RELU
}
layers {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2" # 256 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2" # relu
  type: RELU
}
layers {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3" # 256 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3" # relu
  type: RELU
}
layers {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3" # 2x2 最大池化
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1" # 512 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1" # relu
  type: RELU
}
layers {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2" # # 512 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2" # relu
  type: RELU
}
layers {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3" # 512 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3" # relu
  type: RELU
}
layers {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4" # 2x2 最大池化
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1" # 512 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1" relu
  type: RELU
}
layers {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2" # 512 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2" # relu
  type: RELU
}
layers {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3" # 512 3x3卷积
  type: CONVOLUTION
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layers {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3" # relu
  type: RELU
}
layers {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5" # 2x2 最大池化
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  bottom: "pool5"
  top: "fc6"
  name: "fc6" # 4096 DNN全连接层
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 4096 # 输出维度4-96
  }
}
layers {
  bottom: "fc6"
  top: "fc6"
  name: "relu6" # relu
  type: RELU
}
layers {
  bottom: "fc6"
  top: "fc6"
  name: "drop6" # dropout层
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5 # 丢弃率
  }
}
layers {
  bottom: "fc6"
  top: "fc7"
  name: "fc7" # 4096 DNN全连接层
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 4096
  }
}
layers {
  bottom: "fc7"
  top: "fc7"
  name: "relu7" # relu
  type: RELU
}
layers {
  bottom: "fc7"
  top: "fc7"
  name: "drop7" # dropout层
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "fc7"
  top: "fc8"
  name: "fc8" # DNN输出层，输出类别数量：1000
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 1000
  }
}
layers {
  bottom: "fc8"
  top: "prob"
  name: "prob" # softmax层
  type: SOFTMAX
}